{"version":3,"file":"static/js/304.ddc7cca4.chunk.js","mappings":"yNAGaA,EAAaC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8CAKtBC,EAAaH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4EAMtBG,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,yE,SCkBtC,EA3BkB,SAAHM,GAAsC,IAAhCC,EAAID,EAAJC,KAAIC,EAAAF,EAAEG,IAAAA,OAAG,IAAAD,EAAG,GAAEA,EAAEE,EAAQJ,EAARI,SACnC,OACEC,EAAAA,EAAAA,KAACd,EAAU,CAAAe,SACRC,MAAMC,QAAQP,IACbA,EAAKQ,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAK,OACnBC,EAAAA,EAAAA,MAAClB,EAAU,CAAAW,SAAA,EACTD,EAAAA,EAAAA,KAACS,EAAAA,IAAc,KACfT,EAAAA,EAAAA,KAACR,EAAU,CAACkB,GAAE,GAAAC,OAAKb,GAAGa,OAAGL,GAAMM,MAAO,CAAEC,KAAMd,GAAWE,SACtDM,MAHYD,EAKJ,KAIvB,C,uKCjBaQ,EAAQ3B,EAAAA,GAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kG,GAOTF,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qDAKTF,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,qD,gBCmC7B,EA1Ca,WACX,IAAA0B,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhB3B,GAAW8B,EAAAA,EAAAA,MAsBjB,OApBAC,EAAAA,EAAAA,YAAU,WAGgB,SAAAC,IAavB,OAbuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE8BC,EAAAA,KAAoB,KAAD,EAA9B,GAA8BL,EAAAE,EAAAI,MAArCL,EAAOD,EAAPC,SACKM,OAAO,CAADL,EAAAE,KAAA,QAC6B,OAA9CI,QAAQC,IAAI,kCAAkCP,EAAAQ,OAAA,iBAGhDzB,GAAS0B,EAAAA,EAAAA,GAAKV,IACdZ,EAAU,YAAYa,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAEtBT,EAASS,EAAAU,GAAMC,SACfxB,EAAU,YAAY,yBAAAa,EAAAY,OAAA,GAAAf,EAAA,oBAEzBgB,MAAA,KAAAC,UAAA,CAfD3B,EAAU,WAAW,WAEGO,EAAAmB,MAAC,KAADC,UAAA,CAcxBC,EACF,GAAG,KAGD5C,EAAAA,EAAAA,MAAA6C,EAAAA,SAAA,CAAApD,SAAA,CACc,aAAXsB,IAAyBvB,EAAAA,EAAAA,KAAA,MAAAC,SAAK0B,KAC/B3B,EAAAA,EAAAA,KAACc,EAAK,CAAAb,SAAC,oBACPD,EAAAA,EAAAA,KAACsD,EAAAA,EAAS,CAAC1D,KAAMuB,EAAQrB,IAAI,UAAUC,SAAUA,MAGvD,C,+LCvCMwD,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,qCAGXC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAQ,eAAAhE,GAAAqC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA0B,EAAAhE,EAAA,OAAAqC,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCmB,EAAAA,EAAAA,IAAU,uBAAD/C,OAAwB4C,IAAgB,KAAD,EAA3D,OAA2DK,EAAAvB,EAAAI,KAA/D7C,EAAIgE,EAAJhE,KAAIyC,EAAAQ,OAAA,SACLjD,GAAI,wBAAAyC,EAAAY,OAAA,GAAAf,EAAA,KACZ,kBAHoB,OAAAvC,EAAAuD,MAAA,KAAAC,UAAA,KAKRU,EAAY,eAAAxD,GAAA2B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA6B,EAAMxD,GAAE,IAAAyD,EAAAnE,EAAA,OAAAqC,IAAAA,MAAA,SAAA+B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACXmB,EAAAA,EAAAA,IAAU,UAAD/C,OAAWL,EAAE,KAAAK,OAAI4C,IAAgB,KAAD,EAApD,OAAoDQ,EAAAC,EAAAvB,KAAxD7C,EAAImE,EAAJnE,KAAIoE,EAAAnB,OAAA,SACLjD,GAAI,wBAAAoE,EAAAf,OAAA,GAAAa,EAAA,KACZ,gBAHwBG,GAAA,OAAA5D,EAAA6C,MAAA,KAAAC,UAAA,KAKZe,EAAW,eAAAC,GAAAnC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAmC,EAAM9D,GAAE,IAAA+D,EAAAzE,EAAA,OAAAqC,IAAAA,MAAA,SAAAqC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EACVmB,EAAAA,EAAAA,IAAU,UAAD/C,OAAWL,EAAE,aAAAK,OAAY4C,IAAgB,KAAD,EAA5D,OAA4Dc,EAAAC,EAAA7B,KAAhE7C,EAAIyE,EAAJzE,KAAI0E,EAAAzB,OAAA,SACLjD,GAAI,wBAAA0E,EAAArB,OAAA,GAAAmB,EAAA,KACZ,gBAHuBG,GAAA,OAAAJ,EAAAjB,MAAA,KAAAC,UAAA,KAKXqB,EAAa,eAAAC,GAAAzC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAyC,EAAMpE,GAAE,IAAAqE,EAAA/E,EAAA,OAAAqC,IAAAA,MAAA,SAAA2C,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,cAAAqC,EAAArC,KAAA,EACZmB,EAAAA,EAAAA,IAAU,UAAD/C,OAAWL,EAAE,aAAAK,OAAY4C,IAAgB,KAAD,EAA5D,OAA4DoB,EAAAC,EAAAnC,KAAhE7C,EAAI+E,EAAJ/E,KAAIgF,EAAA/B,OAAA,SACLjD,GAAI,wBAAAgF,EAAA3B,OAAA,GAAAyB,EAAA,KACZ,gBAHyBG,GAAA,OAAAJ,EAAAvB,MAAA,KAAAC,UAAA,KAKb2B,EAAgB,eAAAC,GAAA/C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA+C,EAAMC,GAAK,IAAAC,EAAAtF,EAAA,OAAAqC,IAAAA,MAAA,SAAAkD,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAAA4C,EAAA5C,KAAA,EAClBmB,EAAAA,EAAAA,IAAU,iBAAD/C,OACb4C,EAAY,qDAAA5C,OAAoDsE,IACjF,KAAD,EAFW,OAEXC,EAAAC,EAAA1C,KAFO7C,EAAIsF,EAAJtF,KAAIuF,EAAAtC,OAAA,SAGLjD,GAAI,wBAAAuF,EAAAlC,OAAA,GAAA+B,EAAA,KACZ,gBAL4BI,GAAA,OAAAL,EAAA7B,MAAA,KAAAC,UAAA,I","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","service/apiMovies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const StyledItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  margin-left: 5px;\n  text-decoration: none;\n  color: #333;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BsFillPlayFill } from 'react-icons/bs';\nimport { StyledList, StyledItem, StyledLink } from './MovieList.styled'; \n\nconst MovieList = ({ data, url = '', location }) => {\n  return (\n    <StyledList>\n      {Array.isArray(data) &&\n        data.map(({ id, title }) => (\n          <StyledItem key={id}>\n            <BsFillPlayFill />\n            <StyledLink to={`${url}${id}`} state={{ from: location }}>\n              {title}\n            </StyledLink>\n          </StyledItem>\n        ))}\n    </StyledList>\n  );\n};\n\nMovieList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  url: PropTypes.string,\n  location: PropTypes.object.isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  margin-bottom: 10px;\n  margin-left: 15px;\n  font-size: 25px;\n  font-weight: bold;\n`;\n\nexport const List = styled.ul`\n  margin-left: 15px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  font-size: 14px;\n  margin-bottom: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as apiMovie from 'service/apiMovies';\nimport { Title } from 'pages/Home/Home.styled';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('');\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    setStatus('pending');\n\n    async function getMovies() {\n      try {\n        const { results } = await apiMovie.getMovie();\n        if (!results.length) {\n          console.log('Oooh oh, there are no results.');\n          return;\n        }\n        setMovies([...results]);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error.message);\n        setStatus('rejected');\n      }\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <>\n      {status === 'rejected' && <h3>{error}</h3>}\n      <Title>Trending today</Title>\n      <MovieList data={movies} url=\"movies/\" location={location} />\n    </>\n  );\n};\n\nHome.propTypes = {\n  movies: PropTypes.array,\n  error: PropTypes.any,\n  status: PropTypes.string,\n};\n\nexport default Home;","import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: '79ab7c2fa96297d0e92f5ad0dcb9443d',\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovie = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${searchParams}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data;\n};\n\nexport const getRewiesById = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data;\n};"],"names":["StyledList","styled","_templateObject","_taggedTemplateLiteral","StyledItem","_templateObject2","StyledLink","Link","_templateObject3","_ref","data","_ref$url","url","location","_jsx","children","Array","isArray","map","_ref2","id","title","_jsxs","BsFillPlayFill","to","concat","state","from","Title","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","status","setStatus","_useState5","_useState6","error","setError","useLocation","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$apiMovie$getMo","results","_context","prev","next","apiMovie","sent","length","console","log","abrupt","_toConsumableArray","t0","message","stop","apply","arguments","getMovies","_Fragment","MovieList","searchParams","URLSearchParams","api_key","axios","getMovie","_yield$axios$get","getMovieById","_callee2","_yield$axios$get2","_context2","_x","getCastById","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getRewiesById","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMoviesByQuery","_ref5","_callee5","query","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}