{"version":3,"file":"static/js/387.ce0f9c2d.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","service/apiMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 15px;\n  padding-left: 25px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  width: 225px;\n  font-size: 14px;\n  margin-bottom: 5px;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 15vw;\n  margin-bottom: 10px;\n`;\n\nexport const CardTitle = styled.p`\n  font-weight: 700;\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nexport const Character = styled.p`\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nexport const NoCast = styled.p`\n  margin-top: 15px;\n  margin-bottom: 10px;\n  font-size: 14px;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as apiMovies from 'service/apiMovies';\nimport { List, Item, Image, CardTitle, Character, NoCast } from '../Cast/Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState('pending');\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchCast() {\n      try {\n        const { cast } = await apiMovies.getCastById(movieId);\n        setCast(cast);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error.message);\n        setStatus('rejected');\n      }\n    }\n\n    fetchCast();\n\n    return () => {\n      setStatus('pending');\n      setError(null);\n    };\n  }, [movieId]);\n\n  if (status === 'pending') {\n    return <div>Loading...</div>;\n  }\n\n  if (status === 'rejected') {\n    return <h3>{error}</h3>;\n  }\n\n  return (\n    <>\n      <List>\n        {cast.map(({ id, name, profile_path, character }) => (\n          <Item key={id}>\n            {profile_path && (\n              <Image src={`http://image.tmdb.org/t/p/w780/${profile_path}`} alt=\"foto\" />\n            )}\n            <CardTitle>{name}</CardTitle>\n            <Character>Character: {character}</Character>\n          </Item>\n        ))}\n      </List>\n      {cast.length === 0 && <NoCast>We don't have any cast for this movie</NoCast>}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: '79ab7c2fa96297d0e92f5ad0dcb9443d',\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovie = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${searchParams}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data;\n};\n\nexport const getRewiesById = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data;\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Image","_templateObject3","CardTitle","_templateObject4","Character","_templateObject5","NoCast","_templateObject6","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","status","setStatus","_useState5","_useState6","error","setError","movieId","useParams","useEffect","_fetchCast","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$apiMovies$getC","_cast","_context","prev","next","apiMovies","sent","t0","message","stop","apply","arguments","fetchCast","_jsx","children","_jsxs","_Fragment","map","_ref","id","name","profile_path","character","src","concat","alt","length","searchParams","URLSearchParams","api_key","axios","getMovie","_yield$axios$get","data","abrupt","getMovieById","_ref2","_callee2","_yield$axios$get2","_context2","_x","getCastById","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getRewiesById","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMoviesByQuery","_ref5","_callee5","query","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}